trigger:
- main
- refs/tags/v*

variables:
  - name: buildConfiguration
    value: 'Release'

jobs:
- job: windows
  pool:
    vmImage: windows-2022
  
  variables:
  - name: serviceArtifactName
    value: egs_$(Build.BuildNumber)_windows_amd64.tar.gz
  - name: toolArtifactName
    value: egs-tool_$(Build.BuildNumber)_windows_amd64.tar.gz
  
  steps:
  - checkout: self
    fetchDepth: 0

  - task: UseGitVersion@5
    inputs:
      versionSpec: '5.11.x'
  
  - task: DotNetCoreCLI@2
    displayName: dotnet build
    inputs:
      command: build
      projects: '**/*.csproj'
      arguments: '--configuration $(buildConfiguration) --runtime win-x64'
  
  - task: DotNetCoreCLI@2
    displayName: dotnet test
    inputs:
      command: test
      projects: '**/test/**/*.csproj'
      arguments: '--configuration $(buildConfiguration) --collect "Code coverage" --no-build'

  - task: DotNetCoreCLI@2
    displayName: dotnet publish (service)
    inputs:
      command: 'publish'
      publishWebProjects: false
      projects: 'src/Eryph.GuestServices.Service/*.csproj'
      arguments: '--configuration $(buildConfiguration) --runtime win-x64 --no-build --output $(Build.ArtifactStagingDirectory)/egs/bin'
      zipAfterPublish: false
      modifyOutputPath: false

  - task: ArchiveFiles@2
    displayName: pack (service)
    inputs:
      rootFolderOrFile: '$(Build.ArtifactStagingDirectory)/egs'
      includeRootFolder: false
      archiveType: 'zip'
      archiveFile: '$(Build.ArtifactStagingDirectory)/$(serviceArtifactName)'

  - task: PublishPipelineArtifact@1
    displayName: upload (service)
    inputs:
      targetPath: '$(Build.ArtifactStagingDirectory)/$(serviceArtifactName)'
      artifactName: '$(serviceArtifactName)'

  - task: DotNetCoreCLI@2
    displayName: dotnet publish (tool)
    inputs:
      command: 'publish'
      publishWebProjects: false
      projects: 'src/Eryph.GuestServices.Tool/*.csproj'
      arguments: '--configuration $(buildConfiguration) --runtime win-x64 --no-build --output $(Build.ArtifactStagingDirectory)/egs-tool/bin'
      zipAfterPublish: false
      modifyOutputPath: false

  - task: ArchiveFiles@2
    displayName: pack (tool)
    inputs:
      rootFolderOrFile: '$(Build.ArtifactStagingDirectory)/egs-tool'
      includeRootFolder: false
      archiveType: 'zip'
      archiveFile: '$(Build.ArtifactStagingDirectory)/$(toolArtifactName)'

  - task: PublishPipelineArtifact@1
    displayName: upload (tool)
    inputs:
      targetPath: '$(Build.ArtifactStagingDirectory)/$(toolArtifactName)'
      artifactName: '$(toolArtifactName)'

- job: linux
  pool:
    vmImage: ubuntu-22.04

  variables:
  - name: serviceArtifactName
    value: egs_$(Build.BuildNumber)_linux_amd64.tar.gz
  
  steps:
  - checkout: self
    fetchDepth: 0

  - task: UseGitVersion@5
    inputs:
      versionSpec: '5.11.x'
  
  - task: DotNetCoreCLI@2
    displayName: dotnet build
    inputs:
      command: build
      projects: '**/*.csproj'
      arguments: '--configuration $(buildConfiguration) --runtime linux-x64'
  
  - task: DotNetCoreCLI@2
    displayName: dotnet test
    inputs:
      command: test
      projects: '**/test/**/*.csproj'
      arguments: '--configuration $(buildConfiguration) --collect "Code coverage" --no-build'

  - task: DotNetCoreCLI@2
    displayName: dotnet publish (service)
    inputs:
      command: 'publish'
      publishWebProjects: false
      projects: 'src/Eryph.GuestServices.Service/*.csproj'
      arguments: '--configuration $(buildConfiguration) --runtime linux-x64 --no-build --output $(Build.ArtifactStagingDirectory)/egs/bin'
      zipAfterPublish: false
      modifyOutputPath: false

  - task: ArchiveFiles@2
    displayName: pack (service)
    inputs:
      rootFolderOrFile: '$(Build.ArtifactStagingDirectory)/egs'
      includeRootFolder: false
      archiveType: 'tar'
      tarCompression: 'gz'
      archiveFile: '$(Build.ArtifactStagingDirectory)/$(serviceArtifactName)'

  - task: PublishPipelineArtifact@1
    displayName: upload (service)
    inputs:
      targetPath: '$(Build.ArtifactStagingDirectory)/$(serviceArtifactName)'
      artifactName: '$(serviceArtifactName)'
